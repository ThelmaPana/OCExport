---
title: "Predicting POC export from plankton diversity"
subtitle: "Calipsocean meeting"
author: "Thelma Panaïotis"
date: "05/03/2024"
date-format: "DD/MM/YYYY"
format: 
  revealjs:
    theme: simple
    #footer: ""
    slide-number: c
editor: visual
execute: 
  cache: false
---

```{r}
#| output: false
#| echo: false
source(here::here("utils.R"))

load(here("data/00.carbon_data.Rdata"))
load(here("data/01.all_env.Rdata"))
load(here("data/03.uvp_profiles.Rdata"))
load(here("data/04.all_data.Rdata"))
rm(coast)
```

# Data

## POC

POC export at 1000 m, from [Wang et al. 2023](https://www.nature.com/articles/s41586-023-06772-4).

```{r}
ggmap(df = df_c, var = "poc", type = "raster")
```

## Environment

## Plankton

UVP5 dataset

```{r}
ggplot(profiles, aes(x = lon, y = lat)) +
  geom_polygon(data = world, aes(group = group), fill = "gray") +
  geom_point(size = 0.5) +
  coord_quickmap(expand = FALSE)
```

## Plankton - Taxonomy

::: panel-tabset
## Richness

```{r}
ggmap(profiles, var = "ta_ric", type = "point") + labs(colour = "Species\nRichness")
```

## Diversity

```{r}
ggmap(profiles, var = "ta_div", type = "point") + labs(colour = "Shannon’s\n Diversity")
```

## Evenness

```{r}
ggmap(profiles, var = "ta_eve", type = "point") + labs(colour = "Pielou’s\nEvenness")
```
:::

## Plankton - Morphology

## Plankton - Trophic Status

Coming soon.

## Final dataset

::: r-stack
::: {.fragment .fade-out fragment-index="1"}
::: {style="color: white;"}
Placeholder
:::

```{r}
ggmap(df = df_c, var = "poc", type = "raster") +
  geom_point(data = profiles, aes(x = lon, y = lat), size = 0.5)
```
:::

::: {.fragment .fade-in-then-out fragment-index="1"}
::: {style="color: white;"}
Placeholder
:::

```{r}
ggmap(df = df_c, var = "poc", type = "raster") +
  geom_point(data = df, aes(x = lon, y = lat), size = 0.5)
```
:::

::: {.fragment .fade-in}
`r nrow(df)` data points

```{r}
ggmap(df, var = "poc", type = "point")
```
:::
:::

## Final dataset -- Splits

Learning VS test set, stratified by `POC`.

```{r}
set.seed(12)
df <- df %>% mutate(poc_log = log(poc))
df_split <- initial_split(df, prop = 0.8, strata = poc_log)
training(df_split) %>% 
  mutate(split = "learn") %>% 
  bind_rows(testing(df_split) %>% mutate(split = "test")) %>% 
  ggplot(aes(x = lon, y = lat)) +
  geom_polygon(data = world, aes(group = group), fill = "grey") +
  geom_point(aes(colour = split), size = 0.5) +
  coord_quickmap(expand = FALSE)
```

# Model

## XGBoost


