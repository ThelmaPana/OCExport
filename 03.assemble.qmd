---
title: "Assemble POC and UVP data"
author: "Thelma Panaïotis"
format:
  html:
    toc: true
    embed-resources: true
editor: visual
execute:
  cache: false
  warning: false
---

## Load data

```{r load_data}
#| output: false
source("utils.R")

load("data/01.uvp_poc.Rdata")
load("data/02.uvp_profiles.Rdata")
rm(coast)
```

## Join UVP plankton data with POC  data

```{r join}
# Join UVP profiles with POC profiles
profiles <- profiles %>% 
  #select(profile_id:datetime) %>% 
  left_join(
    uvp_prof_c %>% select(profile_id, lon, lat, lon_r, lat_r, pix_id, att),
    by = join_by(profile_id, lon, lat)
    )

# Some UVP profiles are associated with the same POC profiles
# We need to average plankton properties of these profiles
df_all <- profiles %>% 
  select(pix_id, lon_r, lat_r, att, prop_crustacea:mo_spe) %>% 
  group_by(pix_id, lon_r, lat_r, att) %>% 
  summarise_all(mean) %>% # average for all metrics
  ungroup() %>% 
  select(-pix_id) %>% # drop POC pixel id
  select(lon = lon_r, lat = lat_r, att, everything()) # rename lon, lat and reorder
  
```

## Inspect dataset

The dataset consists of `r nrow(df_all)` points. Let’s plot a map.

```{r map}
#| fig-column: body-outset
#| out-width: 100%
ggmap(df_all, var = "att", type = "point")
```

Let’s have a look at the distribution of the response variable.

```{r dist_resp}
ggplot(df_all) + geom_histogram(aes(x = att), bins = 100)
```

Not too bad.

## Select variables

```{r}
df_all <- df_all %>% 
  select(
    lon, lat, att,
    prop_crustacea:prop_other,
    abund, biovol,
    ta_ric_1, ta_div_1, ta_eve_1,
    ss_slope,
    mo_size_mean, mo_grey_mean, 
    mo_ric, mo_div, mo_eve
    )

```

## Save the resulting dataset

```{r save}
save(df_all, file = file.path(data_dir, "03.all_data.Rdata"))
```
